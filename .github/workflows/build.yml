name: "build"
on: pull_request

jobs:
  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v3

    - name: yarn dist
      run: |
        yarn install
        yarn dist

    - name: Ensure we always have at least one thing to commit
      run: git rev-parse @ > test-fixture.txt


    # Now exercise ourselves.

    # The first run should at least pick up the test-fixture.txt change. If
    # there are also dist/index.js changes then those will be committed, and in
    # that case we're a) exercising the multifile commit scenario, and b) doing
    # "real work" (since we need that change in the repo for the action to
    # function properly when deployed).

    - name: Run current action
      uses: ./
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        message: '[getsentry/action-github-commit] Auto commit build artifact'

    - name: Get to a clean slate locally with latest changes
      # In the previous step we pushed using the GitHub API, so now update
      # locally using the git cli.
      run: |
        echo '◢ --------------------------'
        git status
        echo '█ --------------------------'
        git reset --hard
        git clean --force
        git fetch --all
        git checkout ${GITHUB_HEAD_REF}
        echo '█ --------------------------'
        git status
        echo '◥ --------------------------'


    # Subsequent runs should be a no-op since there are now no changes.
    # Whether or not that is considered a failure is configurable; test both.

    - name: 'Re-run current action - test fail-on-empty=true'
      id: test-fail-on-empty
      continue-on-error: true
      uses: ./
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        message: '❌ This commit should not exist. If it does you have a test failure.'
        fail-on-empty: true

    - name: 'Re-run current action - test fail-on-empty=true - check result'
      if: "always() && steps.test-fail-on-empty.outcome != 'failure'"
      # `.outcome` is "[t]he result of a completed step before continue-on-error
      # is applied."
      #   docs.github.com/en/actions/learn-github-actions/contexts#steps-context
      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed("fail-on-empty=true didn't result in failure")

    - name: 'Re-run current action - test fail-on-empty=false (default)'
      if: "always() && steps.test-fail-on-empty.outcome == 'failure'"
      uses: ./
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        message: '❌ This commit should not exist. If it does you have a test failure.'
